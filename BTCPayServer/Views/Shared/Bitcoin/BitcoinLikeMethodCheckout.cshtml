@using BTCPayServer.BIP78.Sender
@using BTCPayServer.Components.TruncateCenter
@using BTCPayServer.Abstractions.TagHelpers
@using BTCPayServer.Payments.Bitcoin
@model BTCPayServer.Models.InvoicingModels.CheckoutModel

<style>
    .unselectable {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
</style>

<template id="@BitcoinCheckoutModelExtension.CheckoutBodyComponentName">
    @await Component.InvokeAsync("UiExtensionPoint", new {location = "checkout-bitcoin-pre-content", model = Model})
    <div class="payment-box">
        <div v-if="model.due" class="input-group mt-3">
            <div class="form-floating unselectable">
                <vc:truncate-center 
                    text="`${model.due}`" 
                    is-vue="true" 
                    padding="0" 
                    elastic="false" 
                    copy="true"
                    classes="form-control-plaintext" 
                />
                <label v-t="{ path: 'amount_due', args: { paymentMethod: model.paymentMethodName }}"></label>
            </div>
            <div class="disclaimer-text mt-2" style="font-size: 0.7rem; text-align: left">
                <strong style="color: #d9534f;">{{$t('amount_important')}} </strong>{{$t('amount_disclaimer')}}
            </div>
        </div>
        <div v-if="model.address" class="input-group mt-3">
            <div class="form-floating unselectable" id="Address_@Model.PaymentMethodId">
                <vc:truncate-center text="model.address" is-vue="true" padding="15" elastic="true" classes="form-control-plaintext" />
                <label v-t="{ path: 'address', args: { paymentMethod: model.paymentMethodName }}"></label>
            </div>
        </div>
        <div v-if="lightning" class="input-group mt-3">
            <div class="form-floating" id="Lightning_@Model.PaymentMethodId">
                <vc:truncate-center text="lightning" is-vue="true" padding="15" elastic="true" classes="form-control-plaintext" />
                <label v-t="'lightning'"></label>
            </div>
        </div>
        <a v-if="model.invoiceBitcoinUrl && model.showPayInWalletButton" class="btn btn-primary rounded-pill w-100 mt-4" id="PayInWallet" target="_blank"
           :href="model.invoiceBitcoinUrl" :title="$t(hasPayjoin ? 'BIP21 payment link with PayJoin support' : 'BIP21 payment link')" v-t="'pay_in_wallet'"></a>
        @await Component.InvokeAsync("UiExtensionPoint", new {location = "checkout-bitcoin-post-content", model = Model})
    </div>
    
    <payment-details
        :srv-model="model"
        :order-amount="orderAmount"
        :paid="paid"
        :due="due"
        :show-recommended-fee="showRecommendedFee"
        class="mt-4" />

</template>

<script>
	Vue.component(@Safe.Json(BitcoinCheckoutModelExtension.CheckoutBodyComponentName), {
		props: ['model', 'nfcSupported', 'nfcScanning', 'nfcErrorMessage', 'nfcWarningMessage'],
		template: @Safe.Json("#" + BitcoinCheckoutModelExtension.CheckoutBodyComponentName),
        components: {
            qrcode: VueQrcode
        },
        data () {
            // currentTab is needed for backwards-compatibility with old plugin versions
            return { currentTab: undefined };
        },
        computed: {
            hasPayjoin () {
                return this.model.invoiceBitcoinUrl.indexOf('@PayjoinClient.BIP21EndpointKey=') !== -1;
            },
            lightning () {
                const match = this.model.invoiceBitcoinUrl.match(/[&?]lightning=(.*)&?/i);
                return match ? match[1].toLowerCase() : null;
            }
        }
    });
</script>

<script type="text/x-template" id="payment-details">
    <dl>
        <div v-if="orderAmount > 0" id="PaymentDetails-TotalPrice" key="TotalPrice">
            <dt v-t="'total_price'"></dt>
            <dd :data-clipboard="asNumber(srvModel.orderAmount)" data-clipboard-hover="start">{{srvModel.orderAmount}} {{ srvModel.paymentMethodCurrency }}</dd>
        </div>
        <div v-if="orderAmount > 0 && srvModel.orderAmountFiat" id="PaymentDetails-TotalFiat" key="TotalFiat">
            <dt v-t="'total_fiat'"></dt>
            <dd :data-clipboard="asNumber(srvModel.orderAmountFiat)" data-clipboard-hover="start">{{srvModel.orderAmountFiat}}</dd>
        </div>
        <div v-if="srvModel.rate && srvModel.paymentMethodCurrency" id="PaymentDetails-ExchangeRate" key="ExchangeRate">
            <dt v-t="'exchange_rate'"></dt>
            <dd :data-clipboard="asNumber(srvModel.rate)" data-clipboard-hover="start">
                <template v-if="srvModel.paymentMethodCurrency === 'sats'">1 sat = {{ srvModel.rate }}</template>
                <template v-else>1 {{ srvModel.paymentMethodCurrency }} = {{ srvModel.rate }}</template>
            </dd>
        </div>
        <div v-if="srvModel.networkFee" id="PaymentDetails-NetworkCost" key="NetworkCost">
            <dt v-t="'network_cost'"></dt>
            <dd :data-clipboard="asNumber(srvModel.networkFee)" data-clipboard-hover="start">
                <div v-if="srvModel.txCountForFee > 0" v-t="{ path: 'tx_count', args: { count: srvModel.txCount } }"></div>
                <div v-text="`${srvModel.networkFee} ${srvModel.paymentMethodCurrency}`"></div>
            </dd>
        </div>
        <div v-if="paid > 0" id="PaymentDetails-AmountPaid" key="AmountPaid">
            <dt v-t="'amount_paid'"></dt>
            <dd :data-clipboard="asNumber(srvModel.paid)" data-clipboard-hover="start" v-text="`${srvModel.paid} ${srvModel.paymentMethodCurrency}`"></dd>
        </div>
        <div v-if="due > 0" id="PaymentDetails-AmountDue" key="AmountDue">
            <dt v-t="'amount_due'"></dt>
            <dd :data-clipboard="asNumber(srvModel.due)" data-clipboard-hover="start" v-text="`${srvModel.due} ${srvModel.paymentMethodCurrency}`"></dd>
        </div>
        <div v-if="showRecommendedFee" id="PaymentDetails-RecommendedFee" key="RecommendedFee">
            <dt v-t="'recommended_fee'"></dt>
            <dd :data-clipboard="asNumber(srvModel.feeRate)" data-clipboard-hover="start" v-t="{ path: 'fee_rate', args: { feeRate: srvModel.feeRate } }"></dd>
        </div>
    </dl>
</script>